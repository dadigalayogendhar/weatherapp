{"ast":null,"code":"var _jsxFileName = \"/home/arun/DRIVES/ARUN_D/WORK/yogi_work/weather-app-react/wheatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setcity] = useState('');\n  const [weatherInfo, setweatherInfo] = useState(null);\n  function getweather() {\n    const apiKey = '8c21c6d3ffb0d2fc5cb428690c577fe2';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      // console.log(data);\n      let MT = Math.round(data.main.temp);\n      let FL = Math.round(data.main.feels_like);\n      const weather = {\n        location: `weather in ${data.name}`,\n        temperature: `temperature: ${MT} C`,\n        feels_like: `feels like : ${FL} C`,\n        humidity: `humidity : ${data.main.humidity}%`,\n        wind: `wind : ${data.wind.speed} km/h`,\n        condition: `condition : ${data.weather[0].description}`\n      };\n      setweatherInfo(weather);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the city\",\n      value: city,\n      className: \"searchbox\",\n      onChange: e => setcity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getweather,\n      className: \"btn\",\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this), weatherInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: weatherInfo.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherInfo.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherInfo.feels_like\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherInfo.humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherInfo.wind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherInfo.condition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CVODcReKNcVHjsua2XvG/nB39Ms=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","city","setcity","weatherInfo","setweatherInfo","getweather","apiKey","url","fetch","then","response","json","data","MT","Math","round","main","temp","FL","feels_like","weather","location","name","temperature","humidity","wind","speed","condition","description","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/arun/DRIVES/ARUN_D/WORK/yogi_work/weather-app-react/wheatherapp/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\nconst [city,setcity] = useState('');\n\nconst[weatherInfo,setweatherInfo] = useState(null);\n\nfunction getweather() {\n\n  const apiKey = '8c21c6d3ffb0d2fc5cb428690c577fe2';\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n\n  fetch(url)\n   .then((response) => response.json())\n   .then((data) => {\n    // console.log(data);\n    let MT = Math.round(data.main.temp);\n    let FL = Math.round(data.main.feels_like);\n     \n    const weather = {\n      location: `weather in ${data.name}`,\n      temperature: `temperature: ${MT} C`,\n      feels_like: `feels like : ${FL} C`,\n      humidity: `humidity : ${data.main.humidity}%`,\n      wind: `wind : ${data.wind.speed} km/h`,\n      condition:`condition : ${data.weather[0].description}`,\n    };\n\n    setweatherInfo(weather);\n\n\n   });\n\n\n\n\n\n}\n\n  return (\n    <div className=\"App\">\n     <input \n     type = 'text'\n     placeholder='Enter the city'\n     value={city}\n     className='searchbox'\n     onChange={(e)=>setcity(e.target.value)}\n     />\n     <button onClick={getweather} className='btn'>Get Weather</button>\n     {weatherInfo && (<div className='weather-info'>\n      <h3>{weatherInfo.location}</h3>\n      <p>{weatherInfo.temperature}</p>\n      <p>{weatherInfo.feels_like}</p>\n      <p>{weatherInfo.humidity}</p>\n      <p>{weatherInfo.wind}</p>\n      <p>{weatherInfo.condition}</p>\n     </div>)}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}